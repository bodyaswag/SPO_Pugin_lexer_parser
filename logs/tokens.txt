[('i', 'ID', 0), ('=', 'ASSIGN', 1), ('0', 'INT', 0), (';', 'SEMICOLON', 0), ('ans', 'ID', 0), ('=', 'ASSIGN', 1), ('-1', 'INT', 0), (';', 'SEMICOLON', 0), ('while', 'WHILE', 1), ('(', 'BRACKET_OPEN', 0), ('ans', 'ID', 0), ('!=', 'NOT_EQUAL', 4), ('0', 'INT', 0), (')', 'BRACKET_CLOSE', 0), ('{', 'BRACE_OPEN', 0), ('print', 'PRINT', 1), ('(', 'BRACKET_OPEN', 0), ('What do you want?', 'STRING', 0), (')', 'BRACKET_CLOSE', 0), (';', 'SEMICOLON', 0), ('print', 'PRINT', 1), ('(', 'BRACKET_OPEN', 0), ('1 - HashSet', 'STRING', 0), (')', 'BRACKET_CLOSE', 0), (';', 'SEMICOLON', 0), ('print', 'PRINT', 1), ('(', 'BRACKET_OPEN', 0), ('2 - LinkedList', 'STRING', 0), (')', 'BRACKET_CLOSE', 0), (';', 'SEMICOLON', 0), ('print', 'PRINT', 1), ('(', 'BRACKET_OPEN', 0), ('3 - factorial', 'STRING', 0), (')', 'BRACKET_CLOSE', 0), (';', 'SEMICOLON', 0), ('print', 'PRINT', 1), ('(', 'BRACKET_OPEN', 0), ('4 - fobonacci', 'STRING', 0), (')', 'BRACKET_CLOSE', 0), (';', 'SEMICOLON', 0), ('print', 'PRINT', 1), ('(', 'BRACKET_OPEN', 0), ('5 - power of two', 'STRING', 0), (')', 'BRACKET_CLOSE', 0), (';', 'SEMICOLON', 0), ('print', 'PRINT', 1), ('(', 'BRACKET_OPEN', 0), ('0 - exit', 'STRING', 0), (')', 'BRACKET_CLOSE', 0), (';', 'SEMICOLON', 0), ('input', 'INPUT', 1), ('(', 'BRACKET_OPEN', 0), ('ans', 'ID', 0), (')', 'BRACKET_CLOSE', 0), (';', 'SEMICOLON', 0), ('if', 'IF', 1), ('(', 'BRACKET_OPEN', 0), ('ans', 'ID', 0), ('==', 'EQUAL', 4), ('1', 'INT', 0), (')', 'BRACKET_CLOSE', 0), ('{', 'BRACE_OPEN', 0), ('x', 'ID', 0), ('=', 'ASSIGN', 1), ('HashSet', 'HS', 1), (';', 'SEMICOLON', 0), ('print', 'PRINT', 1), ('(', 'BRACKET_OPEN', 0), ('===INIT HASH SET===', 'STRING', 0), (')', 'BRACKET_CLOSE', 0), (';', 'SEMICOLON', 0), ('print', 'PRINT', 1), ('(', 'BRACKET_OPEN', 0), ('[input 0 for exit]', 'STRING', 0), (')', 'BRACKET_CLOSE', 0), (';', 'SEMICOLON', 0), ('print', 'PRINT', 1), ('(', 'BRACKET_OPEN', 0), ('Enter a values: ', 'STRING', 0), (')', 'BRACKET_CLOSE', 0), (';', 'SEMICOLON', 0), ('num', 'ID', 0), ('=', 'ASSIGN', 1), ('-1', 'INT', 0), (';', 'SEMICOLON', 0), ('input', 'INPUT', 1), ('(', 'BRACKET_OPEN', 0), ('num', 'ID', 0), (')', 'BRACKET_CLOSE', 0), (';', 'SEMICOLON', 0), ('while', 'WHILE', 1), ('(', 'BRACKET_OPEN', 0), ('num', 'ID', 0), ('!=', 'NOT_EQUAL', 4), ('0', 'INT', 0), (')', 'BRACKET_CLOSE', 0), ('{', 'BRACE_OPEN', 0), ('x', 'ID', 0), ('->', 'OBJ_REF', 1), ('add', 'ADD', 1), ('(', 'BRACKET_OPEN', 0), ('num', 'ID', 0), (')', 'BRACKET_CLOSE', 0), (';', 'SEMICOLON', 0), ('input', 'INPUT', 1), ('(', 'BRACKET_OPEN', 0), ('num', 'ID', 0), (')', 'BRACKET_CLOSE', 0), (';', 'SEMICOLON', 0), ('}', 'BRACE_CLOSE', 0), ('s', 'ID', 0), ('=', 'ASSIGN', 1), ('x', 'ID', 0), ('->', 'OBJ_REF', 1), ('getSize', 'GSIZE', 1), (';', 'SEMICOLON', 0), ('print', 'PRINT', 1), ('(', 'BRACKET_OPEN', 0), ('Size of Hash Set: ', 'STRING', 0), ('.', 'CONCAT', 1), ('s', 'ID', 0), (')', 'BRACKET_CLOSE', 0), (';', 'SEMICOLON', 0), ('print', 'PRINT', 1), ('(', 'BRACKET_OPEN', 0), ('===Checking Hash Set===', 'STRING', 0), (')', 'BRACKET_CLOSE', 0), (';', 'SEMICOLON', 0), ('print', 'PRINT', 1), ('(', 'BRACKET_OPEN', 0), ('[input 0 for exit]', 'STRING', 0), (')', 'BRACKET_CLOSE', 0), (';', 'SEMICOLON', 0), ('print', 'PRINT', 1), ('(', 'BRACKET_OPEN', 0), ('Enter a values: ', 'STRING', 0), (')', 'BRACKET_CLOSE', 0), (';', 'SEMICOLON', 0), ('num', 'ID', 0), ('=', 'ASSIGN', 1), ('-1', 'INT', 0), (';', 'SEMICOLON', 0), ('input', 'INPUT', 1), ('(', 'BRACKET_OPEN', 0), ('num', 'ID', 0), (')', 'BRACKET_CLOSE', 0), (';', 'SEMICOLON', 0), ('while', 'WHILE', 1), ('(', 'BRACKET_OPEN', 0), ('num', 'ID', 0), ('!=', 'NOT_EQUAL', 4), ('0', 'INT', 0), (')', 'BRACKET_CLOSE', 0), ('{', 'BRACE_OPEN', 0), ('inset', 'ID', 0), ('=', 'ASSIGN', 1), ('x', 'ID', 0), ('->', 'OBJ_REF', 1), ('inSet', 'INSET', 1), ('(', 'BRACKET_OPEN', 0), ('num', 'ID', 0), (')', 'BRACKET_CLOSE', 0), (';', 'SEMICOLON', 0), ('if', 'IF', 1), ('(', 'BRACKET_OPEN', 0), ('inset', 'ID', 0), ('==', 'EQUAL', 4), ('True', 'BOOL', 0), (')', 'BRACKET_CLOSE', 0), ('{', 'BRACE_OPEN', 0), ('print', 'PRINT', 1), ('(', 'BRACKET_OPEN', 0), ('num', 'ID', 0), ('.', 'CONCAT', 1), (' in set', 'STRING', 0), (')', 'BRACKET_CLOSE', 0), (';', 'SEMICOLON', 0), ('}', 'BRACE_CLOSE', 0), ('if', 'IF', 1), ('(', 'BRACKET_OPEN', 0), ('inset', 'ID', 0), ('==', 'EQUAL', 4), ('False', 'BOOL', 0), (')', 'BRACKET_CLOSE', 0), ('{', 'BRACE_OPEN', 0), ('print', 'PRINT', 1), ('(', 'BRACKET_OPEN', 0), ('num', 'ID', 0), ('.', 'CONCAT', 1), (' no in set', 'STRING', 0), (')', 'BRACKET_CLOSE', 0), (';', 'SEMICOLON', 0), ('}', 'BRACE_CLOSE', 0), ('input', 'INPUT', 1), ('(', 'BRACKET_OPEN', 0), ('num', 'ID', 0), (')', 'BRACKET_CLOSE', 0), (';', 'SEMICOLON', 0), ('}', 'BRACE_CLOSE', 0), ('print', 'PRINT', 1), ('(', 'BRACKET_OPEN', 0), ('==END==', 'STRING', 0), (')', 'BRACKET_CLOSE', 0), (';', 'SEMICOLON', 0), ('}', 'BRACE_CLOSE', 0), ('if', 'IF', 1), ('(', 'BRACKET_OPEN', 0), ('ans', 'ID', 0), ('==', 'EQUAL', 4), ('2', 'INT', 0), (')', 'BRACKET_CLOSE', 0), ('{', 'BRACE_OPEN', 0), ('x', 'ID', 0), ('=', 'ASSIGN', 1), ('LinkedList', 'LL', 1), (';', 'SEMICOLON', 0), ('print', 'PRINT', 1), ('(', 'BRACKET_OPEN', 0), ('===INIT LINKED LIST===', 'STRING', 0), (')', 'BRACKET_CLOSE', 0), (';', 'SEMICOLON', 0), ('print', 'PRINT', 1), ('(', 'BRACKET_OPEN', 0), ('[input 0 for exit]', 'STRING', 0), (')', 'BRACKET_CLOSE', 0), (';', 'SEMICOLON', 0), ('print', 'PRINT', 1), ('(', 'BRACKET_OPEN', 0), ('Enter a values: ', 'STRING', 0), (')', 'BRACKET_CLOSE', 0), (';', 'SEMICOLON', 0), ('num', 'ID', 0), ('=', 'ASSIGN', 1), ('-1', 'INT', 0), (';', 'SEMICOLON', 0), ('input', 'INPUT', 1), ('(', 'BRACKET_OPEN', 0), ('num', 'ID', 0), (')', 'BRACKET_CLOSE', 0), (';', 'SEMICOLON', 0), ('while', 'WHILE', 1), ('(', 'BRACKET_OPEN', 0), ('num', 'ID', 0), ('!=', 'NOT_EQUAL', 4), ('0', 'INT', 0), (')', 'BRACKET_CLOSE', 0), ('{', 'BRACE_OPEN', 0), ('x', 'ID', 0), ('->', 'OBJ_REF', 1), ('add', 'ADD', 1), ('(', 'BRACKET_OPEN', 0), ('num', 'ID', 0), (')', 'BRACKET_CLOSE', 0), (';', 'SEMICOLON', 0), ('input', 'INPUT', 1), ('(', 'BRACKET_OPEN', 0), ('num', 'ID', 0), (')', 'BRACKET_CLOSE', 0), (';', 'SEMICOLON', 0), ('}', 'BRACE_CLOSE', 0), ('s', 'ID', 0), ('=', 'ASSIGN', 1), ('x', 'ID', 0), ('->', 'OBJ_REF', 1), ('getSize', 'GSIZE', 1), (';', 'SEMICOLON', 0), ('print', 'PRINT', 1), ('(', 'BRACKET_OPEN', 0), ('Size of Linked List: ', 'STRING', 0), ('.', 'CONCAT', 1), ('s', 'ID', 0), (')', 'BRACKET_CLOSE', 0), (';', 'SEMICOLON', 0), ('head', 'ID', 0), ('=', 'ASSIGN', 1), ('x', 'ID', 0), ('->', 'OBJ_REF', 1), ('getFirst', 'GFIRST', 1), (';', 'SEMICOLON', 0), ('i', 'ID', 0), ('=', 'ASSIGN', 1), ('0', 'INT', 0), (';', 'SEMICOLON', 0), ('end', 'ID', 0), ('=', 'ASSIGN', 1), ('x', 'ID', 0), ('->', 'OBJ_REF', 1), ('getSize', 'GSIZE', 1), (';', 'SEMICOLON', 0), ('while', 'WHILE', 1), ('(', 'BRACKET_OPEN', 0), ('i', 'ID', 0), ('<', 'LESS', 5), ('end', 'ID', 0), (')', 'BRACKET_CLOSE', 0), ('{', 'BRACE_OPEN', 0), ('temp', 'ID', 0), ('=', 'ASSIGN', 1), ('head', 'ID', 0), ('->', 'OBJ_REF', 1), ('getValue', 'GVALUE', 1), (';', 'SEMICOLON', 0), ('print', 'PRINT', 1), ('(', 'BRACKET_OPEN', 0), ('i', 'ID', 0), ('.', 'CONCAT', 1), (' : ', 'STRING', 0), ('.', 'CONCAT', 1), ('temp', 'ID', 0), (')', 'BRACKET_CLOSE', 0), (';', 'SEMICOLON', 0), ('i', 'ID', 0), ('+=', 'PLUS_ASSIGN', 1), ('1', 'INT', 0), (';', 'SEMICOLON', 0), ('head', 'ID', 0), ('=', 'ASSIGN', 1), ('head', 'ID', 0), ('->', 'OBJ_REF', 1), ('getNext', 'GNEXT', 1), (';', 'SEMICOLON', 0), ('}', 'BRACE_CLOSE', 0), ('print', 'PRINT', 1), ('(', 'BRACKET_OPEN', 0), ('==END==', 'STRING', 0), (')', 'BRACKET_CLOSE', 0), (';', 'SEMICOLON', 0), ('}', 'BRACE_CLOSE', 0), ('if', 'IF', 1), ('(', 'BRACKET_OPEN', 0), ('ans', 'ID', 0), ('==', 'EQUAL', 4), ('3', 'INT', 0), (')', 'BRACKET_CLOSE', 0), ('{', 'BRACE_OPEN', 0), ('print', 'PRINT', 1), ('(', 'BRACKET_OPEN', 0), ('===FACTORIAL===', 'STRING', 0), (')', 'BRACKET_CLOSE', 0), (';', 'SEMICOLON', 0), ('factorial', 'ID', 0), ('=', 'ASSIGN', 1), ('1', 'INT', 0), (';', 'SEMICOLON', 0), ('i', 'ID', 0), ('=', 'ASSIGN', 1), ('2', 'INT', 0), (';', 'SEMICOLON', 0), ('n', 'ID', 0), ('=', 'ASSIGN', 1), ('20', 'INT', 0), (';', 'SEMICOLON', 0), ('print', 'PRINT', 1), ('(', 'BRACKET_OPEN', 0), ('Enter a number: ', 'STRING', 0), (')', 'BRACKET_CLOSE', 0), (';', 'SEMICOLON', 0), ('input', 'INPUT', 1), ('(', 'BRACKET_OPEN', 0), ('n', 'ID', 0), (')', 'BRACKET_CLOSE', 0), (';', 'SEMICOLON', 0), ('while', 'WHILE', 1), ('(', 'BRACKET_OPEN', 0), ('i', 'ID', 0), ('<=', 'LESS_EQ', 5), ('n', 'ID', 0), (')', 'BRACKET_CLOSE', 0), ('{', 'BRACE_OPEN', 0), ('factorial', 'ID', 0), ('*=', 'MULT_ASSIGN', 1), ('i', 'ID', 0), (';', 'SEMICOLON', 0), ('i', 'ID', 0), ('+=', 'PLUS_ASSIGN', 1), ('1', 'INT', 0), (';', 'SEMICOLON', 0), ('}', 'BRACE_CLOSE', 0), ('print', 'PRINT', 1), ('(', 'BRACKET_OPEN', 0), ('n', 'ID', 0), ('.', 'CONCAT', 1), ('! = ', 'STRING', 0), ('.', 'CONCAT', 1), ('factorial', 'ID', 0), (')', 'BRACKET_CLOSE', 0), (';', 'SEMICOLON', 0), ('print', 'PRINT', 1), ('(', 'BRACKET_OPEN', 0), ('==END==', 'STRING', 0), (')', 'BRACKET_CLOSE', 0), (';', 'SEMICOLON', 0), ('}', 'BRACE_CLOSE', 0), ('if', 'IF', 1), ('(', 'BRACKET_OPEN', 0), ('ans', 'ID', 0), ('==', 'EQUAL', 4), ('4', 'INT', 0), (')', 'BRACKET_CLOSE', 0), ('{', 'BRACE_OPEN', 0), ('print', 'PRINT', 1), ('(', 'BRACKET_OPEN', 0), ('===FIBONACCI===', 'STRING', 0), (')', 'BRACKET_CLOSE', 0), (';', 'SEMICOLON', 0), ('fib0', 'ID', 0), ('=', 'ASSIGN', 1), ('0', 'INT', 0), (';', 'SEMICOLON', 0), ('fib1', 'ID', 0), ('=', 'ASSIGN', 1), ('1', 'INT', 0), (';', 'SEMICOLON', 0), ('n', 'ID', 0), ('=', 'ASSIGN', 1), ('0', 'INT', 0), (';', 'SEMICOLON', 0), ('i', 'ID', 0), ('=', 'ASSIGN', 1), ('1', 'INT', 0), (';', 'SEMICOLON', 0), ('print', 'PRINT', 1), ('(', 'BRACKET_OPEN', 0), ('Enter n:', 'STRING', 0), (')', 'BRACKET_CLOSE', 0), (';', 'SEMICOLON', 0), ('input', 'INPUT', 1), ('(', 'BRACKET_OPEN', 0), ('n', 'ID', 0), (')', 'BRACKET_CLOSE', 0), (';', 'SEMICOLON', 0), ('while', 'WHILE', 1), ('(', 'BRACKET_OPEN', 0), ('i', 'ID', 0), ('<=', 'LESS_EQ', 5), ('n', 'ID', 0), (')', 'BRACKET_CLOSE', 0), ('{', 'BRACE_OPEN', 0), ('fib1', 'ID', 0), ('+=', 'PLUS_ASSIGN', 1), ('fib0', 'ID', 0), (';', 'SEMICOLON', 0), ('fib0', 'ID', 0), ('=', 'ASSIGN', 1), ('fib1', 'ID', 0), ('-', 'MINUS', 6), ('fib0', 'ID', 0), (';', 'SEMICOLON', 0), ('i', 'ID', 0), ('+=', 'PLUS_ASSIGN', 1), ('1', 'INT', 0), (';', 'SEMICOLON', 0), ('}', 'BRACE_CLOSE', 0), ('print', 'PRINT', 1), ('(', 'BRACKET_OPEN', 0), ('n', 'ID', 0), ('.', 'CONCAT', 1), (' number of Fibonacci is ', 'STRING', 0), ('.', 'CONCAT', 1), ('fib0', 'ID', 0), (')', 'BRACKET_CLOSE', 0), (';', 'SEMICOLON', 0), ('print', 'PRINT', 1), ('(', 'BRACKET_OPEN', 0), ('==END==', 'STRING', 0), (')', 'BRACKET_CLOSE', 0), (';', 'SEMICOLON', 0), ('}', 'BRACE_CLOSE', 0), ('if', 'IF', 1), ('(', 'BRACKET_OPEN', 0), ('ans', 'ID', 0), ('==', 'EQUAL', 4), ('5', 'INT', 0), (')', 'BRACKET_CLOSE', 0), ('{', 'BRACE_OPEN', 0), ('print', 'PRINT', 1), ('(', 'BRACKET_OPEN', 0), ('===POWER OF TWO===', 'STRING', 0), (')', 'BRACKET_CLOSE', 0), (';', 'SEMICOLON', 0), ('n', 'ID', 0), ('=', 'ASSIGN', 1), ('0', 'INT', 0), (';', 'SEMICOLON', 0), ('m', 'ID', 0), ('=', 'ASSIGN', 1), ('0', 'INT', 0), (';', 'SEMICOLON', 0), ('print', 'PRINT', 1), ('(', 'BRACKET_OPEN', 0), ('Enter n:', 'STRING', 0), (')', 'BRACKET_CLOSE', 0), (';', 'SEMICOLON', 0), ('input', 'INPUT', 1), ('(', 'BRACKET_OPEN', 0), ('n', 'ID', 0), (')', 'BRACKET_CLOSE', 0), (';', 'SEMICOLON', 0), ('print', 'PRINT', 1), ('(', 'BRACKET_OPEN', 0), ('Enter m:', 'STRING', 0), (')', 'BRACKET_CLOSE', 0), (';', 'SEMICOLON', 0), ('input', 'INPUT', 1), ('(', 'BRACKET_OPEN', 0), ('m', 'ID', 0), (')', 'BRACKET_CLOSE', 0), (';', 'SEMICOLON', 0), ('while', 'WHILE', 1), ('(', 'BRACKET_OPEN', 0), ('n', 'ID', 0), ('<=', 'LESS_EQ', 5), ('m', 'ID', 0), (')', 'BRACKET_CLOSE', 0), ('{', 'BRACE_OPEN', 0), ('print', 'PRINT', 1), ('(', 'BRACKET_OPEN', 0), ('2 ^ ', 'STRING', 0), ('.', 'CONCAT', 1), ('n', 'ID', 0), ('.', 'CONCAT', 1), (' = ', 'STRING', 0), ('.', 'CONCAT', 1), ('2', 'INT', 0), ('**', 'POW', 8), ('n', 'ID', 0), (')', 'BRACKET_CLOSE', 0), (';', 'SEMICOLON', 0), ('n', 'ID', 0), ('+=', 'PLUS_ASSIGN', 1), ('1', 'INT', 0), (';', 'SEMICOLON', 0), ('}', 'BRACE_CLOSE', 0), ('print', 'PRINT', 1), ('(', 'BRACKET_OPEN', 0), ('==END==', 'STRING', 0), (')', 'BRACKET_CLOSE', 0), (';', 'SEMICOLON', 0), ('}', 'BRACE_CLOSE', 0), ('}', 'BRACE_CLOSE', 0), ('print', 'PRINT', 1), ('(', 'BRACKET_OPEN', 0), ('===PROGRAM END===', 'STRING', 0), (')', 'BRACKET_CLOSE', 0), (';', 'SEMICOLON', 0)]